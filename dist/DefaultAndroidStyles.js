"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
var DefaultAndroidStyles = {
  root: {
    color: "#555555",
    fontFamily: "Roboto",
    minWidth: "325px"
  },
  cardNotification: {
    backgroundColor: "white",
    borderRadius: "8px",
    padding: "16px",
    fontSize: "14px",
    lineHeight: "24px",
    fontWeight: 400,
    letterSpacing: "0.1px",
    margin: "0px",
    display: "block",
    textAlign: "left"
  },
  header: {
    padding: '0 4px 4px 4px !important',
    fontSize: "14px",
    display: "flex"
  },
  appIcon: {
    width: "18px",
    height: "18px",
    color: "black"
  },
  controlIcon: {
    width: "15px",
    height: "15px",
    color: "#555555"
  },
  notificationText: {
    width: '100%'
  },
  notificationTextWithImage: {
    width: 'calc( 100% - 70px )'
  },
  notificationTitle: {
    fontWeight: 600,
    textOverflow: "ellipsis",
    whiteSpace: "nowrap",
    overflow: "hidden"
  },
  notificationPreview: {
    overflow: "hidden",
    display: "block",
    textOverflow: "ellipsis",
    whiteSpace: "nowrap"
  },
  notificationMessage: {
    overflow: "hidden",
    display: "-webkit-box",
    "-webkit-line-clamp": 3,
    "-webkit-box-orient": "vertical"
  },
  notificationMessagePreview: {
    overflow: "hidden",
    display: "-webkit-box",
    "-webkit-line-clamp": 1,
    "-webkit-box-orient": "vertical"
  },
  notificationActionsContainer: {
    marginTop: "10px"
  },
  notificationActions: {
    textTransform: "capitalize",
    fontWeight: 600,
    fontSize: "14px"
  },
  notificationImagePreview: {
    "float": "right",
    height: "60px",
    width: "60px",
    backgroundPosition: "center center",
    backgroundSize: "cover",
    backgroundRepeat: "no-repeat"
  },
  notificationImage: {
    width: "100%",
    height: "175px",
    backgroundPosition: "center center",
    backgroundSize: "cover",
    backgroundRepeat: "no-repeat"
  },
  actionButtons: {
    marginTop: 5,
    fontWeight: 600,
    color: "gray",
    fontSize: "14px"
  }
};
var _default = DefaultAndroidStyles;
exports["default"] = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9EZWZhdWx0QW5kcm9pZFN0eWxlcy5qcyJdLCJuYW1lcyI6WyJEZWZhdWx0QW5kcm9pZFN0eWxlcyIsInJvb3QiLCJjb2xvciIsImZvbnRGYW1pbHkiLCJtaW5XaWR0aCIsImNhcmROb3RpZmljYXRpb24iLCJiYWNrZ3JvdW5kQ29sb3IiLCJib3JkZXJSYWRpdXMiLCJwYWRkaW5nIiwiZm9udFNpemUiLCJsaW5lSGVpZ2h0IiwiZm9udFdlaWdodCIsImxldHRlclNwYWNpbmciLCJtYXJnaW4iLCJkaXNwbGF5IiwidGV4dEFsaWduIiwiaGVhZGVyIiwiYXBwSWNvbiIsIndpZHRoIiwiaGVpZ2h0IiwiY29udHJvbEljb24iLCJub3RpZmljYXRpb25UZXh0Iiwibm90aWZpY2F0aW9uVGV4dFdpdGhJbWFnZSIsIm5vdGlmaWNhdGlvblRpdGxlIiwidGV4dE92ZXJmbG93Iiwid2hpdGVTcGFjZSIsIm92ZXJmbG93Iiwibm90aWZpY2F0aW9uUHJldmlldyIsIm5vdGlmaWNhdGlvbk1lc3NhZ2UiLCJub3RpZmljYXRpb25NZXNzYWdlUHJldmlldyIsIm5vdGlmaWNhdGlvbkFjdGlvbnNDb250YWluZXIiLCJtYXJnaW5Ub3AiLCJub3RpZmljYXRpb25BY3Rpb25zIiwidGV4dFRyYW5zZm9ybSIsIm5vdGlmaWNhdGlvbkltYWdlUHJldmlldyIsImJhY2tncm91bmRQb3NpdGlvbiIsImJhY2tncm91bmRTaXplIiwiYmFja2dyb3VuZFJlcGVhdCIsIm5vdGlmaWNhdGlvbkltYWdlIiwiYWN0aW9uQnV0dG9ucyJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUEsSUFBTUEsb0JBQW9CLEdBQUc7QUFDM0JDLEVBQUFBLElBQUksRUFBRTtBQUNKQyxJQUFBQSxLQUFLLEVBQUUsU0FESDtBQUVKQyxJQUFBQSxVQUFVLEVBQUUsUUFGUjtBQUdKQyxJQUFBQSxRQUFRLEVBQUU7QUFITixHQURxQjtBQU0zQkMsRUFBQUEsZ0JBQWdCLEVBQUU7QUFDaEJDLElBQUFBLGVBQWUs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QWdCLEVBQUU7QUFMRCxHQS9FUTtBQXNGM0JFLEVBQUFBLGFBQWEsRUFBRTtBQUNiUixJQUFBQSxTQUFTLEVBQUUsQ0FERTtBQUVicEIsSUFBQUEsVUFBVSxFQUFFLEdBRkM7QUFHYlQsSUFBQUEsS0FBSyxFQUFFLE1BSE07QUFJYk8sSUFBQUEsUUFBUSxFQUFFO0FBSkc7QUF0RlksQ0FBN0I7ZUE2RmVULG9CIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgRGVmYXVsdEFuZHJvaWRTdHlsZXMgPSB7XG4gIHJvb3Q6IHtcbiAgICBjb2xvcjogXCIjNTU1NTU1XCIsXG4gICAgZm9udEZhbWlseTogXCJSb2JvdG9cIixcbiAgICBtaW5XaWR0aDogXCIzMjVweFwiXG4gIH0sXG4gIGNhcmROb3RpZmljYXRpb246IHtcbiAgICBiYWNrZ3JvdW5kQ29sb3I6IFwid2hpdGVcIixcbiAgICBib3JkZXJSYWRpdXM6IFwiOHB4XCIsXG4gICAgcGFkZGluZzogXCIxNnB4XCIsXG4gICAgZm9udFNpemU6IFwiMTRweFwiLFxuICAgIGxpbmVIZWlnaHQ6IFwiMjRweFwiLFxuICAgIGZvbnRXZWlnaHQ6IDQwMCxcbiAgICBsZXR0ZXJTcGFjaW5nOiBcIjAuMXB4XCIsXG4gICAgbWFyZ2luOiBcIjBweFwiLFxuICAgIGRpc3BsYXk6IFwiYmxvY2tcIixcbiAgICB0ZXh0QWxpZ246IFwibGVmdFwiXG4gIH0sXG4gIGhlYWRlcjoge1xuICAgIHBhZGRpbmc6ICcwIDRweCA0cHggNHB4ICFpbXBvcnRhbnQnLFxuICAgIGZvbnRTaXplOiBcIjE0cHhcIixcbiAgICBkaXNwbGF5OiBcImZsZXhcIlxuICB9LFxuICBhcHBJY29uOiB7XG4gICAgd2lkdGg6IFwiMThweFwiLFxuICAgIGhlaWdodDogXCIxOHB4XCIsXG4gICAgY29sb3I6IFwiYmxhY2tcIlxuICB9LFxuICBjb250cm9sSWNvbjoge1xuICAgIHdpZHRoOiBcIjE1cHhcIixcbiAgICBoZWlnaHQ6IFwiMTVweFwiLCAgICBcbiAgICBjb2xvcjogXCIjNTU1NTU1XCIsXG4gIH0sXG4gIG5vdGlmaWNhdGlvblRleHQ6IHtcbiAgICB3aWR0aDogJzEwMCUnXG4gIH0sXG4gIG5vdGlmaWNhdGlvblRleHRXaXRoSW1hZ2U6IHtcbiAgICB3aWR0aDogJ2NhbGMoIDEwMCUgLSA3MHB4ICknXG4gIH0sXG4gIG5vdGlmaWNhdGlvblRpdGxlOiB7XG4gICAgZm9udFdlaWdodDogNjAwLFxuICAgIHRleHRPdmVyZmxvdzogXCJlbGxpcHNpc1wiLFxuICAgIHdoaXRlU3BhY2U6IFwibm93cmFwXCIsXG4gICAgb3ZlcmZsb3c6IFwiaGlkZGVuXCJcbiAgfSxcbiAgbm90aWZpY2F0aW9uUHJldmlldzoge1xuICAgIG92ZXJmbG93OiBcImhpZGRlblwiLFxuICAgIGRpc3BsYXk6IFwiYmxvY2tcIixcbiAgICB0ZXh0T3ZlcmZsb3c6IFwiZWxsaXBzaXNcIixcbiAgICB3aGl0ZVNwYWNlOiBcIm5vd3JhcFwiXG4gIH0sXG4gIG5vdGlmaWNhdGlvbk1lc3NhZ2U6IHtcbiAgICBvdmVyZmxvdzogXCJoaWRkZW5cIixcbiAgICBkaXNwbGF5OiBcIi13ZWJraXQtYm94XCIsXG4gICAgXCItd2Via2l0LWxpbmUtY2xhbXBcIjogMyxcbiAgICBcIi13ZWJraXQtYm94LW9yaWVudFwiOiBcInZlcnRpY2FsXCJcbiAgfSxcbiAgbm90aWZpY2F0aW9uTWVzc2FnZVByZXZpZXc6IHtcbiAgICBvdmVyZmxvdzogXCJoaWRkZW5cIixcbiAgICBkaXNwbGF5OiBcIi13ZWJraXQtYm94XCIsXG4gICAgXCItd2Via2l0LWxpbmUtY2xhbXBcIjogMSxcbiAgICBcIi13ZWJraXQtYm94LW9yaWVudFwiOiBcInZlcnRpY2FsXCJcbiAgfSxcbiAgbm90aWZpY2F0aW9uQWN0aW9uc0NvbnRhaW5lcjoge1xuICAgIG1hcmdpblRvcDogXCIxMHB4XCJcbiAgfSxcbiAgbm90aWZpY2F0aW9uQWN0aW9uczoge1xuICAgIHRleHRUcmFuc2Zvcm06IFwiY2FwaXRhbGl6ZVwiLFxuICAgIGZvbnRXZWlnaHQ6IDYwMCxcbiAgICBmb250U2l6ZTogXCIxNHB4XCJcbiAgfSxcbiAgbm90aWZpY2F0aW9uSW1hZ2VQcmV2aWV3OiB7XG4gICAgZmxvYXQ6IFwicmlnaHRcIixcbiAgICBoZWlnaHQ6IFwiNjBweFwiLFxuICAgIHdpZHRoOiBcIjYwcHhcIixcbiAgICBiYWNrZ3JvdW5kUG9zaXRpb246IFwiY2VudGVyIGNlbnRlclwiLFxuICAgIGJhY2tncm91bmRTaXplOiBcImNvdmVyXCIsXG4gICAgYmFja2dyb3VuZFJlcGVhdDogXCJuby1yZXBlYXRcIlxuICB9LFxuICBub3RpZmljYXRpb25JbWFnZToge1xuICAgIHdpZHRoOiBcIjEwMCVcIixcbiAgICBoZWlnaHQ6IFwiMTc1cHhcIixcbiAgICBiYWNrZ3JvdW5kUG9zaXRpb246IFwiY2VudGVyIGNlbnRlclwiLFxuICAgIGJhY2tncm91bmRTaXplOiBcImNvdmVyXCIsXG4gICAgYmFja2dyb3VuZFJlcGVhdDogXCJuby1yZXBlYXRcIlxuICB9LFxuICBhY3Rpb25CdXR0b25zOiB7XG4gICAgbWFyZ2luVG9wOiA1LFxuICAgIGZvbnRXZWlnaHQ6IDYwMCxcbiAgICBjb2xvcjogXCJncmF5XCIsXG4gICAgZm9udFNpemU6IFwiMTRweFwiLFxuICB9XG59O1xuZXhwb3J0IGRlZmF1bHQgRGVmYXVsdEFuZHJvaWRTdHlsZXM7XG4iXX0=