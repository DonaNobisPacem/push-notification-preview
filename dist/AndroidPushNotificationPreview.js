"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _AndroidRegularPushNotificationPreview = _interopRequireDefault(require("./AndroidRegularPushNotificationPreview"));

var _AndroidRichPushNotificationPreview = _interopRequireDefault(require("./AndroidRichPushNotificationPreview"));

var _EmojiProcessor = require("./EmojiProcessor");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function AndroidPushNotificationPreview(props) {
  var message = props.message,
      title = props.title,
      image = props.image,
      actionButtons = props.actionButtons;
  var emojiInTitle = (0, _EmojiProcessor.checkIfEmojiPresent)(title);
  var emojiInMessage = (0, _EmojiProcessor.checkIfEmojiPresent)(message);
  var richPush = emojiInTitle || emojiInMessage || image !== undefined || actionButtons !== undefined;
  return /*#__PURE__*/_react["default"].createElement(_react["default"].Fragment, null, !richPush && /*#__PURE__*/_react["default"].createElement(_AndroidRegularPushNotificationPreview["default"], props), richPush && /*#__PURE__*/_react["default"].createElement(_AndroidRichPushNotificationPreview["default"], props));
}

AndroidPushNotificationPreview.propTypes = {
  actionButtons: _propTypes["default"].arrayOf(_propTypes["default"].string),
  appName: _propTypes["default"].string,
  color: _propTypes["default"].string,
  image: _propTypes["default"].string,
  message: _propTypes["default"].string,
  time: _propTypes["default"].string,
  title: _propTypes["default"].string
};
var _default = AndroidPushNotificationPreview;
exports["default"] = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9BbmRyb2lkUHVzaE5vdGlmaWNhdGlvblByZXZpZXcuanMiXSwibmFtZXMiOlsiQW5kcm9pZFB1c2hOb3RpZmljYXRpb25QcmV2aWV3IiwicHJvcHMiLCJtZXNzYWdlIiwidGl0bGUiLCJpbWFnZSIsImFjdGlvbkJ1dHRvbnMiLCJlbW9qaUluVGl0bGUiLCJlbW9qaUluTWVzc2FnZSIsInJpY2hQdXNoIiwidW5kZWZpbmVkIiwicHJvcFR5cGVzIiwiUHJvcFR5cGVzIiwiYXJyYXlPZiIsInN0cmluZyIsImFwcE5hbWUiLCJjb2xvciIsInRpbWUiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7OztBQUVBLFNBQVNBLDhCQUFULENBQXdDQyxLQUF4QyxFQUErQztBQUFBLE1BQ3JDQyxPQURxQyxHQUNJRCxLQURKLENBQ3JDQyxPQURxQztBQUFBLE1BQzVCQyxLQUQ0QixHQUNJRixLQURKLENBQzVCRSxLQUQ0QjtBQUFBLE1BQ3JCQyxLQURxQixHQUNJSCxLQURKLENBQ3JCRyxLQURxQjtBQUFBLE1BQ2RDLGFBRGMsR0FDSUosS0FESixDQUNkSSxhQURjO0FBRTdDLE1BQU1DLFlBQVksR0FBRyx5Q0FBb0JILEtBQXBCLENBQXJCO0FBQ0EsTUFBTUksY0FBYyxHQUFHLHlDQUFvQkwsT0FBcEIsQ0FBdkI7QUFDQSxNQUFNTSxRQUFRLEdBQ1pGLFlBQVksSUFDWkMsY0FEQSxJQUVBSCxLQUFLLEtBQUtLLFNBRlYsSUFHQUosYUFBYSxLQUFLSSxTQUpwQjtBQU1BLHNCQUNFLGdDQUFDLGlCQUFELENBQU8sUUFBUCxRQUNHLENBQUNELFFBQUQsaUJBQWEsZ0NBQUMsaURBQUQsRUFBMkNQLEtBQTNDLENBRGhCLEVBRUdPLFFBQVEsaUJBQUksZ0NBQUMsOENBQUQsRUFBd0NQLEtBQXhDLENBRmYsQ0FERjtBQU1EOztBQUVERCw4QkFBOEIsQ0FBQ1UsU0FBL0IsR0FBMkM7QUFDekNMLEVBQUFBLGFBQWEsRUFBRU0sc0JBQVVDLE9BQVYsQ0FBa0JELHNCQUFVRSxNQUE1QixDQUQwQjtBQUV6Q0MsRUFBQUEsT0FBTyxFQUFFSCxzQkFBVUUsTUFGc0I7QUFHekNFLEVBQUFBLEtBQUssRUFBRUosc0JBQVVFLE1BSHdCO0FBSXpDVCxFQUFBQSxLQUFLLEVBQUVPLHNCQUFVRSxNQUp3QjtBQUt6Q1gsRUFBQUEsT0FBTyxFQUFFUyxzQkFBVUUsTUFMc0I7QUFNekNHLEVBQUFBLElBQUksRUFBRUwsc0JBQVVFLE1BTnlCO0FBT3pDVixFQUFBQSxLQUFLLEVBQUVRLHNCQUFVRTtBQVB3QixDQUEzQztlQVVlYiw4QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSBcInByb3AtdHlwZXNcIjtcbmltcG9ydCBBbmRyb2lkUmVndWxhclB1c2hOb3RpZmljYXRpb25QcmV2aWV3IGZyb20gXCIuL0FuZHJvaWRSZWd1bGFyUHVzaE5vdGlmaWNhdGlvblByZXZpZXdcIjtcbmltcG9ydCBBbmRyb2lkUmljaFB1c2hOb3RpZmljYXRpb25QcmV2aWV3IGZyb20gXCIuL0FuZHJvaWRSaWNoUHVzaE5vdGlmaWNhdGlvblByZXZpZXdcIjtcbmltcG9ydCB7IGNoZWNrSWZFbW9qaVByZXNlbnQgfSBmcm9tIFwiLi9FbW9qaVByb2Nlc3NvclwiO1xuXG5mdW5jdGlvbiBBbmRyb2lkUHVzaE5vdGlmaWNhdGlvblByZXZpZXcocHJvcHMpIHtcbiAgY29uc3QgeyBtZXNzYWdlLCB0aXRsZSwgaW1hZ2UsIGFjdGlvbkJ1dHRvbnMgfSA9IHByb3BzO1xuICBjb25zdCBlbW9qaUluVGl0bGUgPSBjaGVja0lmRW1vamlQcmVzZW50KHRpdGxlKTtcbiAgY29uc3QgZW1vamlJbk1lc3NhZ2UgPSBjaGVja0lmRW1vamlQcmVzZW50KG1lc3NhZ2UpO1xuICBjb25zdCByaWNoUHVzaCA9XG4gICAgZW1vamlJblRpdGxlIHx8XG4gICAgZW1vamlJbk1lc3NhZ2UgfHxcbiAgICBpbWFnZSAhPT0gdW5kZWZpbmVkIHx8XG4gICAgYWN0aW9uQnV0dG9ucyAhPT0gdW5kZWZpbmVkO1xuXG4gIHJldHVybiAoXG4gICAgPFJlYWN0LkZyYWdtZW50PlxuICAgICAgeyFyaWNoUHVzaCAmJiA8QW5kcm9pZFJlZ3VsYXJQdXNoTm90aWZpY2F0aW9uUHJldmlldyB7Li4ucHJvcHN9IC8+fVxuICAgICAge3JpY2hQdXNoICYmIDxBbmRyb2lkUmljaFB1c2hOb3RpZmljYXRpb25QcmV2aWV3IHsuLi5wcm9wc30gLz59XG4gICAgPC9SZWFjdC5GcmFnbWVudD5cbiAgKTtcbn1cblxuQW5kcm9pZFB1c2hOb3RpZmljYXRpb25QcmV2aWV3LnByb3BUeXBlcyA9IHtcbiAgYWN0aW9uQnV0dG9uczogUHJvcFR5cGVzLmFycmF5T2YoUHJvcFR5cGVzLnN0cmluZyksXG4gIGFwcE5hbWU6IFByb3BUeXBlcy5zdHJpbmcsXG4gIGNvbG9yOiBQcm9wVHlwZXMuc3RyaW5nLFxuICBpbWFnZTogUHJvcFR5cGVzLnN0cmluZyxcbiAgbWVzc2FnZTogUHJvcFR5cGVzLnN0cmluZyxcbiAgdGltZTogUHJvcFR5cGVzLnN0cmluZyxcbiAgdGl0bGU6IFByb3BUeXBlcy5zdHJpbmdcbn07XG5cbmV4cG9ydCBkZWZhdWx0IEFuZHJvaWRQdXNoTm90aWZpY2F0aW9uUHJldmlldztcbiJdfQ==